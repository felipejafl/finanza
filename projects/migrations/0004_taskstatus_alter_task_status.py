# Generated by Django 5.2 on 2025-04-19 22:27

import django.db.models.deletion
from django.db import migrations, models

def create_initial_statuses(apps, schema_editor):
    TaskStatus = apps.get_model('projects', 'TaskStatus')
    Task = apps.get_model('projects', 'Task')

    # Crear estados iniciales
    status_mapping = {
        'TODO': TaskStatus.objects.create(
            name='Por Hacer', 
            slug='todo',
            order=0,
            is_final=False
        ),
        'IN_PROGRESS': TaskStatus.objects.create(
            name='En Progreso',
            slug='in-progress',
            order=1,
            is_final=False
        ),
        'COMPLETED': TaskStatus.objects.create(
            name='Completada',
            slug='completed',
            order=2,
            is_final=True
        )
    }

    # Actualizar tareas existentes
    for task in Task.objects.all():
        old_status = task.status
        if old_status in status_mapping:
            task.status = status_mapping[old_status]
            task.save()

def reverse_status_migration(apps, schema_editor):
    Task = apps.get_model('projects', 'Task')
    TaskStatus = apps.get_model('projects', 'TaskStatus')

    # Mapeo inverso de estados
    status_mapping = {
        'todo': 'TODO',
        'in-progress': 'IN_PROGRESS',
        'completed': 'COMPLETED'
    }

    # Revertir tareas a estados anteriores
    for task in Task.objects.all():
        old_status = task.status.slug
        if old_status in status_mapping:
            task.status = status_mapping[old_status]
            task.save()

    # Eliminar todos los TaskStatus
    TaskStatus.objects.all().delete()

class Migration(migrations.Migration):

    dependencies = [
        ('projects', '0003_initial_status_priority_data'),
    ]

    operations = [
        migrations.CreateModel(
            name='TaskStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='nombre')),
                ('slug', models.SlugField(unique=True, verbose_name='identificador')),
                ('description', models.TextField(blank=True, verbose_name='descripción')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='orden')),
                ('is_final', models.BooleanField(default=False, help_text='Indica si es un estado que finaliza la tarea', verbose_name='es estado final')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='creado el')),
            ],
            options={
                'verbose_name': 'estado de tarea',
                'verbose_name_plural': 'estados de tarea',
                'ordering': ['order', 'name'],
            },
        ),
        # Primer paso: cambiar el campo status a texto temporal
        migrations.AlterField(
            model_name='task',
            name='status',
            field=models.CharField(max_length=50),
        ),
        # Ejecutar la migración de datos
        migrations.RunPython(create_initial_statuses, reverse_status_migration),
        # Cambiar el campo status a ForeignKey
        migrations.AlterField(
            model_name='task',
            name='status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='tasks', to='projects.taskstatus', verbose_name='estado'),
        ),
    ]
